#define spritelist
stand,wait,lookup,pose,crouch,walk,run,brake,jump,bonk,fall,grow,knock,die,fire,firewalk,firejump,twirl,dash,specialfall,swim,paddle,climb,climbon2


#define soundlist
smalljump,fireball,pop,explosion,twirl,dash


#define movelist
Giana
#
[up][a]: Twirl
[b]: Energy Ball
[c]: Dash


#define rosterorder
8


#define start
mask_set(12,15)
autorun=0
energy=global.myenergy[p2]

#define stop
if (skidding) {soundstop(name+"skid") skidding=0}
star=0
grow=0
hurt=0
braking=0
gianadash=0
push=0


#define itemget
if (type="jumprefresh") {
	insted=0
	mc=0
}
if (type="mushroom") {
	if ((!piped && !hurt && !growing_rn && !hurting_rn && !(global.mplay>1 && flash))) {
		coll=other.id
		if (p2!=other.p2) {
			itemc+=1
			doscore_p(1000,1)
		}
		if (skidding) {soundstop(name+"skid") skidding=0}
		if (size=0) {set_sprite("grow") growing_rn=60 sprite_angle=0  playgrowsfx("")}
		itemget=1
	}   
}
if (type="fflower") {
	if ((!piped && !hurt && !growing_rn && !hurting_rn && !(global.mplay>1 && flash))) {
		coll=other.id
		if (p2!=other.p2) {
			itemc+=1
			doscore_p(1000,1)
		}
		if (skidding) {soundstop(name+"skid") skidding=0}
		energy+=1
		itemget=1
		if (size=0) {playgrowsfx("") set_sprite("grow") growing_rn=60 sprite_angle=0  playgrowsfx("")}
	}                
}
if (type="star") {
	if ((!piped && !growing_rn && !hurting_rn && !hurt && !(global.mplay>1 && flash))) {
		coll=other.id
		doscore_p(1000)
		sound("itemstar")
		itemc+=1
		if (!super) {
			star=1
			alarm[2]+=other.fuel+2
			alarm[3]=-1
			kek=0 with (player) if (super) other.kek=1
			if (!kek) {
				mus_play("starman",1)
				global.music="star"
			}                      
		}
		if (skindat("growsfx3"+string(p2))) playsfx("growsfx3") 
		else playgrowsfx("3")
		itemget=1
	}            
}
if (type="1up") {
    sound("item1up")
    itemc+=1
	global.lifes+=1
	deaths=max(0,deaths-1)
	if (super) superpower=6000
	energy=maxe
	with (instance_create(other.x,other.y-16,scoreeffect)) value=10
	itemget=1
}
if (type="shield") {
    if ((!piped && !growing_rn && !hurting_rn && !hurt && !(global.mplay>1 && flash))) {
        coll=other.id
        if (p2!=other.p2) {
            itemc+=1
            doscore_p(1000,1)
        }
        sound("itemshield")
        shielded=1
        itemget=1
    }   
}
if (type="poison") {
    if ((!piped && !hurt && !(global.mplay>1 && flash))) {
        coll=other.id
         if !invincible() hurtplayer("enemy")
        itemget=1
    }   
}
if (type="coin") {
	sound("itemcoin")
	if (other.fresh) global.scor[p2]+=100
	global.coins[p2]+=1
	stats("coins collected",stats("coins collected")+1)
	coint+=1
	hit=1	
	itemget=1
}

#define endofstage
right=1
autorun=1

#define effectsfront
if (gianadashcharge && !gianadash)
draw_sprite_general(sheets[size],0,290,70,39-margin*2,39-margin*2,x+lengthdir_x(19-margin,chargingdashdir+90),y+7-3*!!size+dy+lengthdir_y(19-margin,chargingdashdir+90),1,1,chargingdashdir,$ffffff,$ffffff,$ffffff,$ffffff,1)

#define projectile
if (event="create") {

}
	
if (event="step") {
	
	
	if (!firewheel && !thunder && !doublethunder && !strawberry && !trail){
	if doonce=0{
	if ((owner.hang && owner.vsp>1) || owner.braking) {hspeed*=-1 x-=8*xsc}
	image_xscale=3
	image_yscale=2
	imaproj=1
	frame_sub=0
	frame=0
	vspeed=1
	seqcount=2
	wait=8
	energy=owner.energy
	alarm1=256
	frame_sub=0
	frame=0
	brickc=0
	seqcount=2
	kek=8
	hspeed=owner.xsc*3.2+owner.hsp*0.2
	vspeed=0.7
	exploding=0
	exploframe=0
	visible=1
	playsfx("gianafireball")
	doonce=1
	
	}
	calcmoving()
	
	if exploding=0{
	
	xsc=esign(hspeed,1)
	
	frame_sub=!frame_sub
	frame_sub+=1
	if (frame_sub==4) {frame=(frame+1) mod 4 frame_sub=0}

	if (!inview()) instance_destroy()
	alarm1-=1 if alarm1<0{exploding=1}
	xsc=esign(hspeed,xsc)
	
	if energy>2{
		od=96 
		with (enemy) {
                other.d=point_distance(x,y,other.x,other.y)
                if (other.d<other.od) {
                    other.od=other.d
                    other.targeter=id
                }
            }
            if (targeter) {
				dir=point_direction(x,y,targeter.x,targeter.y)
                lock=targeter
				hspeed=lengthdir_x(3,dir)
				vspeed=lengthdir_y(3,dir)
            } else {vspeed=min(2.75,vspeed+0.35)}
		} else {vspeed=min(2.75,vspeed+0.35)}
	coll=instance_place(x,y,bowserboss)
if (coll) {
    if (!coll.flash) {
        coll.hp-=1
        coll.flash=64
        coll.owner=owner
        sound("enemybowserhurt")
        instance_create(x,y,kickpart)
        instance_destroy()
    }
}
	coll=instance_place(x,y,collider)
	if (coll) {
	if (coll.object_index=lavablock) {instance_destroy() exit}
	if (y<coll.y+4 && !instance_place(x,y-8,collider)) {vspeed=-2.75 y-=2 exit}
	if energy>1{
	if ((x<coll.x+4 && !instance_place(x-8,y,collider))||(x>coll.x-4 && !instance_place(x+8,y,collider)))  {hspeed=-hspeed exit}}
	
    exploding=1
    sound("itemblockbump")
	}

	coll=instance_place(x,y,enemy)
	if (coll) {
		if (coll.object_index!=beetle && !(coll.object_index=shell && coll.type=-1)) {
			global.coll=owner.id
			enemydie(coll,2)
		}
		with (owner) playsfx("gianapop")  
		exploding=1
	}
	
	

	coll=instance_place(x,y,player)
	if (coll) {
		if (coll.id!=owner) if (!invincible(coll)) {    
			if (!flag.passed[owner.p2] && !flag.passed[coll.p2] && !coll.flash && !coll.piped) { 
				if (coll.name="knux" && coll.glide && sign(hspeed)=-sign(coll.hsp)) {hspeed=abs(coll.hsp+1)*esign(coll.hsp,1) owner=coll.id with (owner) playsfx("knuxreflect") exit}                                                                   
				if (coll.name="robo" && coll.lookup && coll.xsc=sign(hspeed)) {instance_create(x,y,kickpart) instance_destroy() exit}
				with (coll) hurtplayer("enemy")
			}
			exploding=1
		}
	}
}
else if exploding=1
	{
	exploframe+=0.5
	if (exploframe>=3) {visible=0 instance_destroy()}
	hspeed=0
	vspeed=0
	}
}
} else {

xsc=esign(hspeed,1)
visible=1
if trail{
framesub+=1
if framesub>3 if frame!=3 {frame+=1} else instance_destroy()

}
else if firewheel{ ///FIRE WHEEL
framesub+=1
if framesub>3 frame+=1
if frame>3 {frame=0 framey=!framey}
if !doonce{
doonce=1
depth=4
drop=0
getimer=8
p2=-1
xp=x
yp=y
}
alarm0-=1
if alarm0=0{
c=1
if (!drop) {
    hspeed=(vspeed<0)
    vspeed=0
}
depth=0
}
// END STEP
x+=hsp
if (sign(hsp)=1) hsp=max(0,hsp-0.0625) else hsp=min(0,hsp+0.0625)

if (c) calcmoving()
getimer-=1


if (!inview()) {x=xp y=yp}
else { 
    xp=x yp=y
    if (drop) hspeed=0
    if (drop || c) {
        mask_index=spr_goombamask
        yground=easyground()
        if (y>=yground-8-4*(vspeed=0)) {vspeed=0 y=yground-8 hspeed=esign(hspeed,!drop)}
        else vspeed=min(3,vspeed+0.25)
        if (hspeed!=0) {
            coll=collision(hspeed,0)
            if (coll) hspeed=abs(hspeed)*sign(x-mean(coll.bbox_left,coll.bbox_right))
        }
        mask_index=spr_mask12x12
    }
}

if (pitdeath()) instance_destroy()

coll=instance_place(x,y,player)
if (coll) {
		if (!getimer || coll.name="kid") {visible=0 if (give_item(coll.id,"mushroom")) instance_destroy() visible=1}
}

}
else{ //THE OTHERS
if !doonce{
doonde=1
lok=0
drop=0
getimer=8
p2=-1
xp=x
yp=y
}
alarm0-=1
frame+=1
if frame>3 frame=0
if alarm0=0{
if (!drop) vspeed=0
depth=0
y=round(y/8)*8
c=1}
x+=hsp
if (sign(hsp)=1) hsp=max(0,hsp-0.0625) else hsp=min(0,hsp+0.0625)
if (c) calcmoving()
getimer-=1

if (!inview()) {x=xp y=yp}
else {
    xp=x yp=y
    if (drop) hspeed=0
    if (drop || c) {
        mask_index=spr_goombamask
        yground=easyground()
        if (y>=yground-8-4*(vspeed=0)) {vspeed=0 y=yground-8}
        else vspeed=min(3,vspeed+0.25)
        mask_index=spr_mask12x12
    }
}

if (pitdeath()) instance_destroy()

coll=instance_place(x,y,player)
if (coll) {
		if (!getimer || coll.name="kid") {visible=0 if (give_item(coll.id,"flower")) instance_destroy() visible=1}
}
}
}
	
if (event="draw") {
	if trail{draw_sprite_part_ext(sheet,1,80+frame*33,90,32,32,floor(x),floor(y-16),xsc,1,$ffffff,1)}
	else if firewheel{draw_sprite_part_ext(sheet,1,218+frame*17,framey*17+38,16,16,floor(x),floor(y-8),xsc,1,$ffffff,1)}
	else if thunder{draw_sprite_part_ext(sheet,1,218+frame*17,72,16,16,x,y,xsc,1,$ffffff,1)}
	else if doublethunder{draw_sprite_part_ext(sheet,1,218+frame*17,89,16,16,x,y,xsc,1,$ffffff,1)}
	else if strawberry{draw_sprite_part_ext(sheet,1,218+frame*17,106,16,16,x,y,xsc,1,$ffffff,1)}
	else if exploding=0
	{
		draw_sprite_part_ext(sheet,0,10+frame*17,87,16,16,round(x-7*xsc),round(y-7),xsc,1,$ffffff,1)
	} else
	{
		draw_sprite_part(sheet,0,10+floor(exploframe)*17,106,16,16,round(x-7),round(y-7))
	}
}


#define effectsbehind
if (gianadash) {
    draw_sprite_part_ext(sheets[size],0,80+(floor(gianadash/2) mod 4)*33,55,32,32,round(x-16*sign(xscale)*hspeed!=0),round(y-16+dy),xsc,1,$ffffff,alpha)
}


#define sprmanager
frspd=1

if (growing_rn) {sprite="grow"}
else if (hurting_rn) {sprite="knock"}
else if (pose||posed) sprite="pose"
else if (jump) {
	if (gianadash) sprite="dash"
    else if (twirl) {sprite="twirl" if (!akey) frspd=0.5}
    else if (fired) sprite="firejump"
    else if (bonk) sprite="bonk"
    else if (hurt) sprite="knock"
	else if (water) {sprite="swim" if (swim) sprite="paddle"}
    else if (fall=13) sprite="specialfall"
    else if (vsp>=0 || hasfired) sprite="fall"
    else sprite="jump"
} else {
    if (crouch) {
        if (fired) sprite="fire"
        else sprite="crouch"
    } else if (hsp=0 && loose || push!=0) {
        if (fired) sprite="fire"
        else if (pose) sprite="pose"
        else if (lookup) sprite="lookup"
		else if (waittime>maxwait) {sprite="wait"}
        else sprite="stand"
    } else {
        if (fired) sprite="firewalk"
        else if (push) sprite="stand"
        else if (braking) sprite="brake"
        else if (abs(hsp)>1.8 && !water) {sprite="run" frspd=abs(hsp/3)}
        else {if!autorun {sprite="walk" frspd=0.5+abs(hsp/2)}else{sprite="run" frspd=abs(hsp/3)} }
    }
}
#define controls
com_inputstack()

tempbrick=0

//situations in which it should skip controls entirely
if (rise!=0 || hurt || piped ||transforming) {
    di=0
    exit
}

if (up) com_piping()
oup=up

if (up && (!hang || !size)) {
    if (hsp=0 && !jump) lookup=1
    else lookup=0
} else lookup=0

//list of things that prevent you from moving
if (crouch && !jump) h=0
//list of things that force a direction
if (gianadash) h=sign(xsc)

//movement
if (h!=0) {
    loose=0
    coll=noone
    if (h=sign(hsp) || hsp=0) coll=collision(h,0)
    if (coll) if (object_is_ancestor(coll.object_index,moving)) coll=place_meeting(x+h,y+coll.vsp+sign(coll.vsp),coll)
    if (coll) if (player_climbstep(coll)) coll=noone
    if (x<=minx && left) coll=1
    if (coll) {
		com_hitwall(h)
        if (!jump && !crouch) {
            push=h
            if (!gianadash && !twirl) xsc=h
            braking=0
        }
    } else {
        if (!crouch) {
            if (!jump) {
                if (sign(hsp)==xsc && sign(hsp)!=h && abs(hsp)>0.1 && !fired) {
                    braking=1
					skidding=1
					playsfx(name+"skid")
                    brakedir=h
                    hsp=median(-2,hsp,2)
                } else {
                    braking=0
                    if (!gianadash && !twirl) xsc=h
                }
            } else if (!gianadash && !twirl) xsc=h
            if (twirl) hsp+=0.2*wf*h
            else hsp+=(0.08+0.05*((abs(hsp)<1 && sign(hsp)=h)))*wf*h
        }
    }
}

if (push!=h) push=0

com_di()

if (gianadash) di=0

//code for specifically the a button
if ((abut || jumpbufferdo) && !springin) {
	if (water) {jump=1 vsp=-1.5-up*0.75 swim=24 crouch=0 playsfx("gianaswim")}else 
    if (up) {
        if (!twirl && fall!=13 && !gianadash) {
            shoot(x,y+8,psmoke,0,1)
            playsfx("gianatwirl")
            if (jump) vsp=-3 else vsp=-4
            gianadashcharge=0
			jump=1
            insted=1
            twirl=1
            run=0
        }
    } else {
        if (!jump) { //jump
			if (size==0) jumpsnd=playsfx("gianasmalljump")
			else jumpsnd=playsfx("gianajump")
			vsp=-4.7
			
			

			jump=1
			fall=0
			braking=0
			spin=0
			canstopjump=1
			if (mymoving) hsp+=avgmovingh
			crouch=0
			insted=1
			jumpspd=min(1,0.5+abs(hsp)/5)
        } else { //air jumps
			if (!insted) {
				shoot(x,y+8,psmoke,0,1)
				insted=1
				vsp=-4.7
				canstopjump=1
				if (size=0) jumpsnd=playsfx("gianasmalljump")
				else jumpsnd=playsfx("gianajump")
			}
            jumpbuffer=4*!jumpbufferdo
        }
    }
}
jumpbufferdo=0
springin=0

if (akey) {
    if (jumpbuffer) jumpbuffer-=1
} else jumpbuffer=0

if (!akey) {
    if (canstopjump=1 && jump && vsp<-1 && !sprung) {
        vsp=-1
    }
    canstopjump=0
}

//code for specifically the b button
if (bbut) {
    if (energy && !gianadash && count_projectiles()<1) {
        if (h) {xsc=h braking=0}
        fire_projectile(x+7*xsc,y)
        playsfx("gianafireball")
        fired=12
		hasfired=1
        frame=0
    }
}

if (cbut) {
    if (fall!=13 && !gianadash) {
		hasfired=0
        if (twirl) {
            fall=13
            twirl=0
            insted=1
        } 
    }
}

if (ckey && !twirl && gianadash=0 && gianadashed=0){
gianadashcharge+=floor((gianadashcharge)/7+1)
chargingdashdir=point_direction(0,0,sign(xsc)*((90-gianadashcharge)/90),-gianadashcharge/70)
}

if (!ckey && gianadashcharge>1 && !gianadashed){
if gianadashcharge>50 gianadashcharge=50
if gianadashcharge<10 gianadashcharge=10
	vsp=0
	gianadashed=1
    gianadash=9999
    playsfx("gianadash")
    dashlock=(size!=2)
    dashbounce=1
    jump=1
    dashdir=point_direction(0,0,-sign(xsc)*((90-gianadashcharge)/90),-gianadashcharge/70)
	vsp=lengthdir_y(9,dashdir)
	hsp=-lengthdir_x(10,dashdir)
	gianadashcharge=0
	}



if (!jump) {
    if (down && !up) {
        if (!braking) crouch=1
        com_piping()
    } else crouch=0
}


#define movement
if (piped ||transforming || growing_rn || hurting_rn) exit

if (loose) {
    hsp=max(0,abs(hsp)-0.1)*sign(hsp)
    if (braking) xsc=brakedir
    braking=0
}

maxspd=(2-0.5*twirl+!!gianadash)*wf
if (abs(hsp)>maxspd) hsp=(abs(hsp)*2+maxspd)/3*sign(hsp)

vsp=min(7+downpiped,vsp)

calcmoving()

if (!dead) {
	if (gianadash) {
		coll=collision(hsp,vsp)
		if sign(xsc)=1 right=1
		if sign(xsc)=-1 left=1
		if (coll) {
			with (shoot(x,y+4,gianadashbox)) {
				with (brick) if (place_meeting(x,y,other.id)) hitblock(id,other.owner,2,esign((y+15)-other.y,1),0)
			}        
			if (!instance_exists(coll)) coll=noone
			else {
				if (dashbounce) {
					hsp=-hsp                                      
					dashdir=anglediff(0,90-(dashdir-90))
					gianadash=15
					dashlock=1
					sound("itemblockbump")
				} else {
					hsp=-hsp*0.02     
					vsp=vsp *0.02    					
					dashdir=anglediff(0,90-(dashdir-90))
					gianadash=0
					sound("itemblockbump")}
			}			
		}
		
		yground=easyground()
		coll=collision(0,vsp)
		if (coll || y>easyground-14) {
			with (shoot(x,y+4,gianadashbox)) {
				with (brick) if (place_meeting(x,y,other.id)) hitblock(id,other.owner,2,esign((y+15)-other.y,1),0)
			}        
			if (!instance_exists(coll)) coll=noone
			else  {
				vsp=-3
				hsp=sign(xsc)*2
				dashdir=anglediff(0,-dashdir)
				gianadash=15
				dashlock=1
				sound("itemblockbump")
			}
		}
		}
		player_horstep()
		yground=easyground()
		if (yground!=verybignumber) yground-=14
		if (jump) {
			if (twirl) vsp=min(vsp+0.1*wf,3-2.5*akey)
			else if (water) vsp=min(1.5,vsp+0.04)
			else vsp=min(4,vsp+0.15*wf)
			if gianadash&&vsp<-5 {vsp+=0.2}
			crouch=0
			braking=0

			if (sprung && !fall) fall=1
			push=0
			player_vertstep()
			coyote=0
		}
		
		if (osld<180 && osld>0 && !instance_place(x-16,y+4,ground)) dy=3
		else if (osld>180 && osld<320 && !instance_place(x-16,y+4,ground)) dy=3
		if (!jump) {
			twirl=0
			if (yground!=verybignumber) y=yground
			if (finish && ending="retainer" && !jump) coyote=0
			if (!collision(0,4) && (y<yground-2)) {
				coyote+=1
				if ((down || !run) && coyote=1) {y+=1 coyote=3}
				if (coyote=3) {
					jump=1
					crouch=0
					fall=1
				}
			} else coyote=0
			if (jumpbuffer=-1) {
				jumpbuffer=0
				if (!down) jumpbufferdo=1
			}
		}
	
}
com_finishmove()


#define actions
com_warping()
com_actions()

if gianadash {
firetrailtimer+=1
if firetrailtimer>10 {firetrailtimer=0 with(fire_projectile(x-sign(xsc)*16,y)) trail=1}

}
weight=0.7
bartype=0
if !size{
maxe=0} else maxe=3
global.myenergy[p2]=energy

is_intangible=0
with (flag) if (passed[other.p2]) other.is_intangible=1
if (transform || finish || piped=1 || flash ||transforming) is_intangible=1

power_lv=0
if (twirl) power_lv=1
if (gianadash) power_lv=2+(size=1)
if (star) power_lv=5
if (super) power_lv+=1

if (piped||transforming) exit
//custom powerups
if readyahit!=0 readyahit-=1
if readyahit=1 with(hittingblock){
with (phaser) y=-verybignumber
if (go=1) {if (instance_position(x+8,y+24,collider)) go=-1}
else {if (instance_position(x+8,y-8,collider)) go=1}    
with (phaser) y=ystart


iid=noone

if (content="item") {
    if (other.size=0) {with (other) {with(fire_projectile(hittingblock.x,hittingblock.y+2)){	
	createpow=1
	imaproj=0
	if owner.size=0 firewheel=1 else
	if owner.energy=0 thunder=1 else
	if owner.energy=1 doublethunder=1 else
	if owner.energy>=2 strawberry=1
	iid=id vspeed=0.25*owner.hittingblock.go alarm0=48}}}
}
if (content="shard") {
    with (instance_create(x+8,y+8+4*go,starshard)) vspeed=3.5*other.go
}
if (content="shield") {
    with (instance_create(x+8,y+8+4*go,shield)) vspeed=3.5*other.go
}
if (content="life") {
    with (instance_create(x+8,y+8+4*go,lifemush)) {iid=id vspeed=0.25*other.go alarm[0]=48}
}
if (content="key") {
    with (instance_create(x+8,y+8+4*go,keyitem)) {iid=id vspeed=0.25*other.go alarm[0]=48}
}
if (content="spring") {
    with (instance_create(x,y+4*go,spring)) {
        vspeed=0.25*other.go
        bbb=1
        if (!other.go) aaa=1
        c=0
        alarm[0]=48
        owner=other.owner
    }
}
if (content="spreng") {
    with (instance_create(x,y+4*go,spreng)) {
        vspeed=0.25*other.go
        c=0
        alarm[0]=48
        owner=other.owner
    }
}
if (content="poison") {
    with (instance_create(x+8,y+8+4*go,mushpoison)) {iid=id vspeed=0.25*other.go alarm[0]=48 owner=other.owner}
}
if (content="vine") {
    with (instance_create(x,y+4*go,sprong)) {
        vspeed=0.25*other.go alarm[0]=48
        target=other.target
        bbb=1
        if (!other.go) aaa=1
        c=0
    }
}
if (content="star") {
    with (instance_create(x+8,y+8+4*go,starman)) {iid=id vspeed=0.25*other.go alarm[0]=48}
}

if (picked && iid) {
    i=instance_create(x+8,y+8,gravitymanager)
    i.vsp=go*4-1
    i.carry=iid
    i.phase=4
    i.drop=1
    iid.c=0
    iid.drop=0
    iid.speed=0
    iid.aaa=0
    iid.bbb=0
    iid.alarm[0]=-1
}

picked=0
}

//waiting animation
if dowait{
if (sprite="stand")
{waittime+=1}
else if sprite!="wait" waittime=0
}




if (!jump) {
    vsp=0
	hasfired=0
    if (!star) seqcount=0
    hang=0
    if (push=0 && hsp!=0 && braking) {
        playsfx(name+"skid")
    } else if (skidding) {soundstop(name+"skid") skidding=0}
}

if (underwater()) {
    if (!water) {
        if (abs(vsp)>2) sound("itemsplash")
		watrlock=10 spinjump=0 fall=1 hang=0
        vsp=min(1,vsp/2)
        jumpspd=1
    }
    water=1 wf=0.45
} else {
    if (water) {
        water=0
        vsp=max(-4,vsp*2)
        if (abs(vsp)>2) sound("itemsplash")
    }
    wf=1
}

//smoke generation
if (global.dustframe && !gianadash) {
    if (vsp<-5-2*!sprung) {
        shoot(x,y+8,psmoke,0,-1)
    }
    if (vsp>7) {
        speedwagon+=1
        if (speedwagon>60) shoot(x,y,psmoke,0,1)
    } else speedwagon=0
}

if (jump && !fall) fall=1

dashcooldown=max(0,dashcooldown-1)
swim=max(0,swim-1)
growing_rn=max(0,growing_rn-1)
if growing_rn{set_sprite("grow")
hsp=0
hspeed=0
vsp=0
vspeed=0
gianadash=0
twirl=0
if growing_rn=1 {size=1}
}
hurting_rn-=1
if hurting_rn{set_sprite("knock")
hsp=0
hspeed=0
vsp=0
vspeed=0
is_intangible=1
gianadash=0
twirl=0
if hurting_rn=1 {size=0 flash=30 is_intangible=0}
}

 gianadash-=1
if (gianadash) {
    gianadash-=1
    insted=1
    if (!(gianadash mod 2)) shoot(x,y,gianafirepart)
    if (!gianadash) {fall=13 dashcooldown=8}
    if (dashlock>1) {
        if (instance_exists(dashlock)) dashdir+=median(-8,anglediff(dashdir,point_direction(x,y,dashlock.x,dashlock.y-12)),8)
        else gianadash=min(gianadash,10)
    }
    if (hsp>=0) {
        if (xsc=-1) {sprite_angle=(sprite_angle+180) mod 360 xsc=1}
    } else {
        if (xsc=1) {sprite_angle=(sprite_angle+180) mod 360 xsc=-1}
    }
} else sprite_angle=0

com_endactions()

#define enemycoll

if (hurt || piped || (intangible() && !diggity)) exit

coll=noone extracheck=id inst=0
if (insta) {extracheck=myhitbox inst=1}


with (pswitch) if (phase!=other.id && !lock && !carry) {
    mask_index=spr_cratemask
    if (instance_place(x,y-other.vsp-16*!!other.diggity,other.id) || instance_place(x,y,extracheck)) other.coll=id
    mask_index=spr_mask16x16
}
with (enemy) if (phase!=other.id && !lock && !carry)
    if (instance_place(x,y-other.vsp-16*!!other.diggity,other.id) || instance_place(x,y,extracheck)) other.coll=id

if (coll) {
    calcfall=fall
    if (fall=5 || fall=12) calcfall=0
    global.coll=id
    type=coll.object_index
        
    seqcount=max(1,seqcount)
	
	if (growing_rn||hurting_rn){exit}
    
    if (gianadash || dashcooldown) {
        gianadash=0
        fall=1
        vsp=-4
        hsp=median(-1,hsp,1)
        enemyexplode(coll)
        exit
    }
    
    if (super) {
        if (water) seqcount=1
        enemyexplode(coll)
        exit
    }

    
    if (coll.object_index=lakitu) if (coll.flee) exit

    
    if (star  
    || (spin && type!=spinyegg && type!=beetle && type!=shell)
    || (pound>13 && type!=piranha && type!=spinyegg && type!=spiny)) {
        instance_create(mean(x,coll.x),mean(y,coll.y),kickpart)
        if (type=hammerbro) seqcount=max(5,seqcount)
        enemydie(coll)                
        exit
    }
    
    if (type=piranha) {
        hurtplayer("enemy")
        exit
    }
    
    if (spin) {
        if (type=shell) {if (coll.type!="beetle") {enemydie(coll) exit}}
        else if (type=beetle) {hsp=0 jump=1 jumpspd=0.5 spin=0 enemystomp(coll) exit}
        else if (type=spinyegg) {hurtplayer("enemy") exit}
        else {enemydie(coll) exit}
    }
                     
    if (type=spiny) {
        if (!fall && vsp<0) enemyexplode(coll)
        else hurtplayer("enemy") exit
    }
    if (type=spinyegg) {
        if (punch && punch<=10) enemydie(coll) else hurtplayer("enemy") exit
    }                
            
    if (type=shell && !coll.time) {          
        if (coll.type="spiny" && (coll.vspeed-vsp)*coll.ysc<0) {
            hurtplayer("enemy") exit
        } else if (!coll.kicked || (coll.stop && (coll.owner=id || coll.vspeed>=0))) {
                if (coll.stop && !coll.kicked) doscore_p(8000)
                else {seqcount=max(seqcount,2+scorelok1) doscore_p()}
                if (jump) {
                    if (vsp>0) {
                        vsp=-3-akey*1.5
                        canstopjump=akey
                        twirl=0 insted=1
                        if (fall=12) fall=5
                    }
                }
                kicksound(0)
                instance_create(mean(x,coll.x),mean(y,coll.y),kickpart)
                with (coll) {spd=max(3,abs(other.hsp)+1) hspeed=spd*esign(x-other.x,other.xsc) owner=other.id kicked=1 stop=0 phase=owner}
            
            exit
        } else {
            if (coll.kicked && !coll.stop && sign(hsp)=sign(coll.hspeed) && abs(hsp)>abs(coll.hspeed)) {
                kicksound(0)
                instance_create(mean(x,coll.x),mean(y,coll.y),kickpart)
                coll.spd=max(3,abs(hsp)+1)
                coll.owner=id
                coll.phase=id
                exit
            } else if (coll.kicked && (!coll.stop || (coll.owner!=id && coll.vspeed<0)) && (vsp<0 || !jump)) {hurtplayer("enemy") exit}
            else {
                with (coll) {hspeed=0 owner=noone phase=other.id stop=0 kicked=0 time=15}
                vsp=-3-akey*1.5 canstopjump=akey sound("enemystomp") doscore_p() twirl=0 insted=1 if (fall=12) fall=5 exit
            }
        }                    
    }
    
    if (type=blooper) {
        if (jump && (!calcfall || !water) && vsp>0) {if (calcfall) enemystomp(coll,5) else enemyexplode(coll)}
        else hurtplayer("enemy") exit
    }
    
    if (type=cheepred || type=cheepwhite) {
        if (jump && !calcfall) {enemyexplode(coll) exit}
        else {hurtplayer("enemy") exit}
    }
    
    if (jump) {
        if (type=koopa || type=beetle || object_is_ancestor(type,koopa)) {
            if (vsp<0) {
                if (calcfall) hurtplayer("enemy")
                else enemyexplode(coll) exit
            }
        } else {
            if (!calcfall) {enemyexplode(coll) exit}
            if (vsp<0) {hurtplayer("enemy") exit}
        }
        
        if (type=goomba && seqcount=1 && !scorelok4) {seqcount=0 scorelok4=1}    
        if ((type=koopa || type=redkoopa) && seqcount=1) scorelok1=1    
        if (type=hopkoopa || type=redhover) seqcount=max(seqcount,1)
        if (type=hammerbro) seqcount=max(5,seqcount)
        if (fall=12) fall=5                        
        enemystomp(coll) exit      
    } else if (coll.vspeed<0 && coll.y>y+8) {jump=1 fall=1 vsp=-0.5 enemystomp(coll) exit}
    
    hurtplayer("enemy")   
} 

#define hurt


if ((invincible() && (hurt || flash)) || intangible())

pipe=0
sprongin=0
speed=0
if (skidding) {soundstop(name+"skid") skidding=0}
if (carry && carryid) {with (carryid) event_user(0) carryid=noone carry=0}

braking=0
sprung=0
diggity=0
grow=0
fairdash=0
gianadash=0
gk=0
fk=0
punch=0
bounce=0
twirl=0
oldsize=size
jumpbuffer=0
hyperspeed=0
hp=0
star=0
if (super) stopsuper()   

if ((!size || ohgoditslava) && !shielded) {
   if (global.mplay>1 || global.debug || global.lemontest) alarm[7]=120
   if (global.gamemode="battle") dropcoins(0)
   die()
} else {
    rise=0
    glide=0
    sprung=0
    fall=0
    pound=0  
    braking=0
    upper=0
    hyperspeed=0
    playsfx(name+"damage")

    starhit=0
    set_sprite("knock") 
	frspd=!shielded 
	hurting_rn=30
}

//Block hitting
#define hitblocks
if typeblockhit=0{
with (blockcoll){
if (stonebump || owner.size=0 && insted!=1 && !owner.tempkill && cracked=0) {
    if (!goinup) {if (insted!=2) owner.vsp=1.5 sound("itemblockbump") tpos=1}
	if (owner.gianadash && !stonebump){
	cracked=1
    i=instance_create(x,y,crackedbrick)
    i.owner=id
	}
} else { 
    if (!insted) {owner.vsp=1.5}
    owner.blockc+=1
    global.scor[owner.p2]+=10
    sound("itemblockbreak")
    hit=1
    if (skindat("bricd")) {
        i=instance_create(x,y,bricd)
        i.biome=biome
        i.depth=depth
    }
    if (stoned="1") with (instance_create(x,y+8,stone)) phase=1
    i=instance_create(x+4,y+12,part) i.hspeed=-1 i.vspeed=-1+2*go
    i=instance_create(x+12,y+12,part) i.hspeed=1 i.vspeed=-1+2*go 
    i=instance_create(x+4,y+4,part) i.hspeed=-1 i.vspeed=-3+2*go
    i=instance_create(x+12,y+4,part) i.hspeed=1 i.vspeed=-3+2*go
    
    with (turing) event_user(4)
    instance_destroy()
  }
 }
} else if typeblockhit=1{
	with (blockcoll){
	
if (!insted) {
	owner.vsp=1.5             
}
if (!wait || owner.tempbrick) {
    if (object_index!=turing) sound("itemblockbump")
    wait=13
    if (!hit) {
        picked=owner.is_coinexplosive || other.is_coinexplosive
        x=xstart
        if (object_index=invisibox) {
            with (player) if (instance_place(x,y,other.id)) y+=other.bbox_bottom-bbox_top
        }
        untouched=0
        if (respawning) alarm[2]=400
        upwardthrust()
        if (object_index=goalblock) {
            event_user(4)
        } else if (object_index=turing) {
            if (mode=0) turingblock()
        } else if (content!="bros") {
            if (object_index=talkbox) {
                if (string_pos("sfx",text)) {
                    sound(string_delete(text,1,4))
                } else {
                    if (!open) {
                        with (talkbox) open=0
                        open=1
                        cur=0
                        sound("itemmessage")
                    } else {
                        if (trans) cur+=1
                        if (cur+1>=pages) open=0
                        else {sf=0 trans=1}
                    }
                }
            } else if (content="coins") {
                if (picked) {
                    with (instance_position(x+8,y+8+16*go,brick)) {insted=1 owner=other.owner event_user(0)}
                    if (go=1) if (instance_position(x+8,y+24,collider)) {
                        go=-1
                        with (instance_position(x+8,y-8,brick)) {insted=1 owner=other.owner event_user(0)}
                    }
                    i=cc
                    if (done || picked=2) i=1
                    cc-=i
                    picked=0
                    repeat (i) with (instance_create(x+8,y+8+16*go,itemdrop)) {
                        hspeed=myrand(2)-1
                        vspeed=(2+myrand(2))*other.go
                        drop=0
                        type="coinup"
                    } 
                } else {
                    global.scor[owner.p2]+=100           
                    with (instance_create(x+8,y+8+16*go,coinup)) {vspeed=-1.5+2*other.go p2=other.owner.p2}
                    global.coins[owner.p2]+=1
                    owner.coint+=1
                    cc-=1  
                }
                if (done || cc=0) {
                    owner.blockc+=1
                    sprite="box"
                    hit=1       
                }
                if (alarm[1]=-1) alarm[1]=256
                tpos=0
            } else {
                owner.blockc+=1
                hit=1
                sprite="box"
                sound("itemappear")
                mush=!owner.size
				owner.hittingblock=id
				owner.content=content
				with (owner) {readyahit=11-other.picked*8 }
            } 
        }
        tpos=1
        spendblock()
    }
}


	}
}

#define hitwall
//hit blocks sideways
if (twirl && size) {
    global.coll=id
    with (hittable) if (instance_place(x-other.hitside,y,other.id)) {
        go=-1
        insted=1
        event_user(0)
        insted=0 picked=0
    }
    coll=collision(hitside,0)
}

if (gianadash) {
	dashdir=anglediff(0,90-(dashdir-90))
	xsc=-xsc
	vsp=-3
	hsp=-hsp
	
	gianadash=15
	dashlock=1
	sound("itemblockbump")	
	with (hittable) if (instance_place(x,y,other.id)) {
        go=-1
        insted=1
        event_user(0)
    }
}else hsp=0



if (coll=noone) exit


hyperspeed=0         


#define landing
braking=0

if (gianadash) {
with (hittable) if (instance_place(x,y-max(4,other.vsp),other.id)) {
		go=1    
		event_user(0)
		picked=0
		if object_index=brick other.donotstop=1 else donotstop=0
		}
	jump=1
	if !(size&&donotstop){
	vsp=-3
	
	hsp=sign(xsc)*2
	dashdir=anglediff(0,-dashdir)
	gianadash=15
	dashlock=1}
	sound("itemblockbump")	
	gianadashcharge=0
} else gianadashed=0

if (downpiped) {
	shoot(x-8,y+4,psmoke,-2,-1)
	shoot(x+8,y+4,psmoke,2,-1)
    downpiped=0
}
if (hurt) {flash=1 fk=0 hsp=0 hurt=0}

playsfx(name+"step")

//jump buffering
if (jumpbuffer) jumpbuffer=-1

#define death
if (event="create"){

gravity=0.1
vspeed=-3
sprite_angle=0
c=4

frame=0
frspd=1
name="golf"
sprite="die"
alpha=1


alarm1=300


name=owner.name
p2=owner.p2
owner=owner.id
size=owner.size
xsc=owner.xsc
ysc=owner.ysc
water=owner.water

if (name!="mario" && name!="luigi") vspeed=-3.5 gravity=0.1
} 
else if (event="step"){
alarm1=max(0,alarm1-1)

if (rotate) {
    c-=1
    if (!c) {c=4 sprite_angle-=16 xsc+=0.05*sign(xsc) ysc+=0.05}
}




if alarm1=0 instance_destroy()
} else if (event="draw"){
spriteswitch(1)
}

#define enterpipe
if (gianadash) fastpipe=1
gianadash=0
braking=0
crouch=0
push=0


#define exitpipe
if (type="door") {}
if (type="side") {}
if (type="up") {}
if (type="down") {}